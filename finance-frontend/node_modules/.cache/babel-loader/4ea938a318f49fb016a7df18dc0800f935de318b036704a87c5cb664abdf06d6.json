{"ast":null,"code":"var _jsxFileName = \"D:\\\\finance-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { Spin } from 'antd';\nimport axios from 'axios';\nimport TransactionList from \"./components/TransactionList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL || \"http://localhost:1337\";\nconst URL_TXACTIONS = '/api/txactions';\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactionData, setTransactionData] = useState([{\n    id: 1,\n    action_datetime: \"2023-11-18T17:00:00.000Z\",\n    amount: 1244,\n    note: \"sad naha\",\n    type: \"income\"\n  }]);\n  const fetchItems = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(URL_TXACTIONS);\n      console.log(response.data.data.map(data => {\n        return {\n          id: data.id,\n          action_datetime: data.attributes.action_datetime,\n          amount: data.attributes.amount,\n          note: data.attributes.not,\n          type: data.attributes.type\n        };\n      }));\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        spinning: isLoading,\n        children: /*#__PURE__*/_jsxDEV(TransactionList, {\n          data: transactionData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OSOCp5Bw3VQZtXuSmgTG+LcqvAY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Spin","axios","TransactionList","jsxDEV","_jsxDEV","defaults","baseURL","process","env","REACT_APP_BASE_URL","URL_TXACTIONS","App","_s","isLoading","setIsLoading","transactionData","setTransactionData","id","action_datetime","amount","note","type","fetchItems","response","get","console","log","data","map","attributes","not","err","className","children","spinning","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/finance-frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css' ;\nimport { Spin } from 'antd';\nimport axios from 'axios'\nimport TransactionList from \"./components/TransactionList\" ;\n\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL || \"http://localhost:1337\"\nconst URL_TXACTIONS = '/api/txactions'\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [transactionData, setTransactionData] = useState([\n    {id:1 , action_datetime: \"2023-11-18T17:00:00.000Z\", amount:1244, note:\"sad naha\", type : \"income\"}\n  ])\n\n  const fetchItems = async () => {\n    try {\n      setIsLoading(true)\n      const response = await axios.get(URL_TXACTIONS)\n      console.log(response.data.data.map(data => {\n        return {\n          id : data.id ,\n          action_datetime : data.attributes.action_datetime ,\n          amount : data.attributes.amount ,\n          note : data.attributes.not ,\n          type : data.attributes.type \n        }\n      }))\n\n    } catch (err) {\n      console.log(err)\n    } finally { setIsLoading(false) }\n  }\n\n  useEffect(() => {\n    fetchItems()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Spin spinning={isLoading}>\n          <TransactionList data={transactionData} />\n        </Spin>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,8BAA8B;AAAE,SAAAC,MAAA,IAAAC,OAAA;AAE5DH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAClF,MAAMC,aAAa,GAAG,gBAAgB;AACtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,CACrD;IAACmB,EAAE,EAAC,CAAC;IAAGC,eAAe,EAAE,0BAA0B;IAAEC,MAAM,EAAC,IAAI;IAAEC,IAAI,EAAC,UAAU;IAAEC,IAAI,EAAG;EAAQ,CAAC,CACpG,CAAC;EAEF,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFR,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMS,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAACd,aAAa,CAAC;MAC/Ce,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACC,GAAG,CAACD,IAAI,IAAI;QACzC,OAAO;UACLV,EAAE,EAAGU,IAAI,CAACV,EAAE;UACZC,eAAe,EAAGS,IAAI,CAACE,UAAU,CAACX,eAAe;UACjDC,MAAM,EAAGQ,IAAI,CAACE,UAAU,CAACV,MAAM;UAC/BC,IAAI,EAAGO,IAAI,CAACE,UAAU,CAACC,GAAG;UAC1BT,IAAI,EAAGM,IAAI,CAACE,UAAU,CAACR;QACzB,CAAC;MACH,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;IAClB,CAAC,SAAS;MAAEjB,YAAY,CAAC,KAAK,CAAC;IAAC;EAClC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACduB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB7B,OAAA;MAAQ4B,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5B7B,OAAA,CAACJ,IAAI;QAACkC,QAAQ,EAAErB,SAAU;QAAAoB,QAAA,eACxB7B,OAAA,CAACF,eAAe;UAACyB,IAAI,EAAEZ;QAAgB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CAvCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}