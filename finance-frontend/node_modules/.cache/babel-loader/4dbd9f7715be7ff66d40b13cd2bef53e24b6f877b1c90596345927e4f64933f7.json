{"ast":null,"code":"var _jsxFileName = \"D:\\\\financial_project\\\\finance-frontend\\\\src\\\\FinanceScreen.js\",\n  _s2 = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport moment from 'moment';\nimport TransactionList from './components/TransactionList';\nimport AddItem from './components/AddItem';\nimport { useState, useEffect } from 'react';\nimport { Spin, Divider, Typography } from 'antd';\nimport axios from 'axios';\nimport EditButton from './components/EditItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL || \"http://localhost:1337\";\nconst URL_TXACTIONS = '/api/txactions';\nfunction FinanceScreen() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentAmount, setCurrentAmount] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactionData, setTransactionData] = useState([]);\n  const [checkEdit, setCheckEdit] = useState(null);\n  const [newItem, setNewItem] = useState([]);\n  const editedItem = item => {\n    setNewItem(item);\n  };\n  const update = async () => {\n    _s();\n    try {\n      setIsLoading(true);\n      const response = await axios.put(`${URL_TXACTIONS}/${item.id}`, {\n        data: newItem\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsLoading(false);\n    }\n    const fetchItems = async () => {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(URL_TXACTIONS);\n        setTransactionData(response.data.data.map(d => ({\n          id: d.id,\n          key: d.id,\n          ...d.attributes\n        })));\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const addItem = async item => {\n      try {\n        setIsLoading(true);\n        const params = {\n          ...item,\n          action_datetime: moment()\n        };\n        const response = await axios.post(URL_TXACTIONS, {\n          data: params\n        });\n        const {\n          id,\n          attributes\n        } = response.data.data;\n        setTransactionData([...transactionData, {\n          id: id,\n          key: id,\n          ...attributes\n        }]);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const editItem = item => {\n      // console.log(item);\n      setCheckEdit(item);\n    };\n    const setEdit = () => {\n      setCheckEdit(null);\n    };\n    const deleteItem = async itemId => {\n      try {\n        setIsLoading(true);\n        await axios.delete(`${URL_TXACTIONS}/${itemId}`);\n        fetchItems();\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    useEffect(() => {\n      setCurrentAmount(transactionData.reduce((sum, d) => sum = d.type === \"income\" ? sum + d.amount : sum - d.amount, 0));\n    }, [transactionData]);\n    useEffect(() => {\n      fetchItems();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          spinning: isLoading,\n          children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n            children: [\"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E40\\u0E07\\u0E34\\u0E19\\u0E1B\\u0E31\\u0E08\\u0E08\\u0E38\\u0E1A\\u0E31\\u0E19 \", currentAmount, \" \\u0E1A\\u0E32\\u0E17\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddItem, {\n            onItemAdded: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E23\\u0E32\\u0E22\\u0E23\\u0E31\\u0E1A-\\u0E23\\u0E32\\u0E22\\u0E08\\u0E48\\u0E32\\u0E22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n            data: transactionData,\n            onTransactionDeleted: deleteItem,\n            onTransactionEdited: editItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), checkEdit != null && /*#__PURE__*/_jsxDEV(EditButton, {\n            onItemEdited: editedItem,\n            setnull: setEdit,\n            item: checkEdit,\n            setmodal: checkEdit != null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  };\n  _s(update, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n}\n_s2(FinanceScreen, \"7t+i1+/BlbiMyekSyA27YyfGJqQ=\");\n_c = FinanceScreen;\nexport default FinanceScreen;\nvar _c;\n$RefreshReg$(_c, \"FinanceScreen\");","map":{"version":3,"names":["logo","moment","TransactionList","AddItem","useState","useEffect","Spin","Divider","Typography","axios","EditButton","jsxDEV","_jsxDEV","defaults","baseURL","process","env","REACT_APP_BASE_URL","URL_TXACTIONS","FinanceScreen","_s2","_s","$RefreshSig$","currentAmount","setCurrentAmount","isLoading","setIsLoading","transactionData","setTransactionData","checkEdit","setCheckEdit","newItem","setNewItem","editedItem","item","update","response","put","id","data","err","console","log","fetchItems","get","map","d","key","attributes","addItem","params","action_datetime","post","editItem","setEdit","deleteItem","itemId","delete","reduce","sum","type","amount","className","children","spinning","Title","fileName","_jsxFileName","lineNumber","columnNumber","onItemAdded","onTransactionDeleted","onTransactionEdited","onItemEdited","setnull","setmodal","_c","$RefreshReg$"],"sources":["D:/financial_project/finance-frontend/src/FinanceScreen.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport moment from 'moment';\nimport TransactionList from './components/TransactionList';\nimport AddItem from './components/AddItem';\nimport { useState, useEffect } from 'react';\nimport { Spin, Divider, Typography } from 'antd';\nimport axios from 'axios'\nimport EditButton from './components/EditItem';\n\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL || \"http://localhost:1337\"\nconst URL_TXACTIONS = '/api/txactions'\n\nfunction FinanceScreen() {\n  const [currentAmount, setCurrentAmount] = useState(0)\n  const [isLoading, setIsLoading] = useState(false)\n  const [transactionData, setTransactionData] = useState([])\n  const [checkEdit, setCheckEdit] = useState(null)\n  const [newItem, setNewItem] = useState([])\n\n  const editedItem = (item) => {\n    setNewItem(item)\n  }\n\n  const update = async () => {\n    try {\n      setIsLoading(true)\n      const response = await axios.put(`${URL_TXACTIONS}/${item.id}`, { data: newItem })\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsLoading(false)\n    }\n\n    const fetchItems = async () => {\n      try {\n        setIsLoading(true)\n        const response = await axios.get(URL_TXACTIONS)\n        setTransactionData(response.data.data.map(d => ({\n          id: d.id,\n          key: d.id,\n          ...d.attributes\n        })))\n      } catch (err) {\n        console.log(err)\n      } finally { setIsLoading(false) }\n    }\n\n    const addItem = async (item) => {\n      try {\n        setIsLoading(true)\n        const params = { ...item, action_datetime: moment() }\n        const response = await axios.post(URL_TXACTIONS, { data: params })\n        const { id, attributes } = response.data.data\n        setTransactionData([\n          ...transactionData,\n          { id: id, key: id, ...attributes }\n        ])\n      } catch (err) {\n        console.log(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    const editItem = (item) => {\n      // console.log(item);\n      setCheckEdit(item)\n    }\n\n    const setEdit = () => {\n      setCheckEdit(null)\n    }\n\n    const deleteItem = async (itemId) => {\n      try {\n        setIsLoading(true)\n        await axios.delete(`${URL_TXACTIONS}/${itemId}`)\n        fetchItems()\n      } catch (err) {\n        console.log(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    useEffect(() => {\n      setCurrentAmount(transactionData.reduce(\n        (sum, d) => sum = d.type === \"income\" ? sum + d.amount : sum - d.amount\n        , 0))\n    }\n      , [transactionData])\n\n    useEffect(() => {\n      fetchItems()\n    }, [])\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Spin spinning={isLoading}>\n            <Typography.Title>\n              จำนวนเงินปัจจุบัน {currentAmount} บาท\n            </Typography.Title>\n            <AddItem onItemAdded={addItem} />\n            <Divider>บันทึกรายรับ-รายจ่าย</Divider>\n            <TransactionList\n              data={transactionData}\n              onTransactionDeleted={deleteItem}\n              onTransactionEdited={editItem} />\n            {checkEdit != null && <EditButton onItemEdited={editedItem} setnull={setEdit} item={checkEdit} setmodal={checkEdit != null} />}\n          </Spin>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default FinanceScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}